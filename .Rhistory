title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 200  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 1200  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 1500  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 15000  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 15000  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.0012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 15000  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.0012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-exposed", "Exposed")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
library(tidyverse)
library(lubridate)
library(readxl)
library(lubridate)
library(purrr)
# Read the CSV file with the correct delimiter (semicolon)
df <- read_delim("csv/Denmark/flu_denmark.csv", delim = ";", col_names = FALSE)
setwd("C:/Users/Evan/Documents/Code/sanofi-rsv-flu")
# Read the CSV file with the correct delimiter (semicolon)
df <- read_delim("csv/Denmark/flu_denmark.csv", delim = ";", col_names = FALSE)
View(df)
df <- df %>%
rename(
Disease = X1,
Season = X2,
Week = X3,
RegionCode = X4,
Region = X5,
AgeGroup = X6,
Gender = X7,
NumCitizens = X8,
NumTests = X9,
NumConfirmedCases = X10,
NumNewAdmissions = X11,
NumDeaths = X12,
PositivityRate = X13,
CasesPer100kCitizens = X14,
TestsPer100kCitizens = X15,
AdmissionsPer100kCitizens = X16,
NewAdmissions = X17,
NewDeaths = X18,
CasesPer100kCitizens2 = X19,
Timestamp = X20
)
View(df)
# Read the CSV file with the correct delimiter (semicolon)
df <- read_delim("csv/Denmark/flu_denmark.csv", delim = ";", col_names = FALSE, skip = 1)
View(df)
# Rename the columns based on your provided header
colnames(df) <- c(
"Disease", "Season", "Week", "RegionCode", "Region", "AgeGroup", "Gender",
"NumCitizens", "NumTests", "NumConfirmedCases", "NumNewAdmissions", "NumDeaths",
"PositivityRate", "CasesPer100kCitizens", "TestsPer100kCitizens",
"AdmissionsPer100kCitizens", "NewAdmissions", "NewDeaths",
"CasesPer100kCitizens2", "Timestamp"
)
View(df)
# Split the 'Season' into separate 'Year' and 'EpidemiologicalSeason'
df <- df %>%
separate(Season, into = c("Year", "EpidemiologicalSeason"), sep = "/")
# Split the 'Week' column into 'Year' and 'WeekNumber'
df <- df %>%
separate(Week, into = c("YearWeek", "WeekNumber"), sep = "-")
View(df)
# Convert the timestamp column to Date type
df <- df %>%
mutate(Timestamp = as.POSIXct(Timestamp, format="%Y-%m-%dT%H:%M:%OS"))
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx")
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx") %>%
view()
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx") %>%
mutate(
year = substr(Season, 1, 4),  # Extract the first 4 characters as the year
week_number = gsub(".*-U(.*)", "\\1", Week)  # Extract the week number after "U"
) %>%
view()
view()
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx") %>%
mutate(
year = substr(Season, 1, 4),  # Extract the first 4 characters as the year
week_number = gsub(".*-U(.*)", "\\1", Week)  # Extract the week number after "U"
) %>%
group_by(week_number, year, Age_group) %>%
summarise(cases = n(), .groups = "drop") %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
view()
View(rsv_dk_data)
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
year = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort)
) %>%
view()
View(rsv_dk_data)
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year <- as.numeric(substr(Season, 1, 4)),
year <- ifelse(season_number == 1, start_year, start_year + 1)
) %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year <- as.numeric(substr(Season, 1, 4)),
year <- ifelse(season_number == 1, start_year, start_year + 1)
) %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
select(-start_year) %>%
view()
View(rsv_dk_data)
View(rsv_dk_data)
View(rsv_dk_data)
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
rename(age_group = 5) %>%
select(-start_year) %>%
group_by(week, year, age_group) %>%
summarise(cases = n(), .groups = "drop") %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
rename(age_group = 5) %>%
select(-start_year) %>%
group_by(week, year, age_group) %>%
view()
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx") %>%
mutate(
year = substr(Season, 1, 4),  # Extract the first 4 characters as the year
week_number = gsub(".*-U(.*)", "\\1", Week)  # Extract the week number after "U"
) %>%
group_by(week_number, year, Age_group) %>%
summarise(cases = n(), .groups = "drop") %>%
view()
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx") %>%
mutate(
year = substr(Season, 1, 4),  # Extract the first 4 characters as the year
week_number = gsub(".*-U(.*)", "\\1", Week)  # Extract the week number after "U"
) %>%
group_by(week_number, year, Age_group) %>%
view()
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx") %>%
mutate(
year = substr(Season, 1, 4),  # Extract the first 4 characters as the year
week_number = gsub(".*-U(.*)", "\\1", Week)  # Extract the week number after "U"
) %>%
group_by(week_number, year, Age_group) %>%
summarise(cases = sum(Number_of_new_admissions), .groups = "drop") %>%
view()
flu_dk_data <- read_excel("csv/Denmark/flu_denmark.xlsx") %>%
mutate(
year = substr(Season, 1, 4),  # Extract the first 4 characters as the year
week_number = gsub(".*-U(.*)", "\\1", Week)  # Extract the week number after "U"
) %>%
group_by(week_number, year, Age_group) %>%
summarise(admissions = sum(Number_of_new_admissions), .groups = "drop") %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
rename(age_group = 5) %>%
select(-start_year) %>%
group_by(week, year, age_group) %>%
summarise(cases = sum(value), .groups = "drop") %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
rename(age_group = 5) %>%
select(-start_year) %>%
group_by(week, year, age_group) %>%
summarise(cases = sum(value), .groups = "drop") %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
rename(age_group = 5) %>%
select(-start_year) %>%
group_by(week, year, age_group) %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
rename(age_group = 5) %>%
select(-start_year) %>%
group_by(week, year, age_group) %>%
summarise(cases = as.numeric(sum(value)), .groups = "drop") %>%
view()
rsv_dk_data <- read_csv("csv/Denmark/rsv_denmark.csv") %>%
mutate(
season_number = gsub("Year (\\d+) .*", "\\1", week_sort),  # Extract the year (first digit)
week = gsub(".*week (\\d+)", "\\1", week_sort),
start_year = as.numeric(substr(Season, 1, 4)),
year = ifelse(season_number == 1, start_year, start_year + 1)
) %>%
rename(age_group = 5) %>%
select(-start_year) %>%
group_by(week, year, age_group) %>%
summarise(cases = floor(sum(value)), .groups = "drop") %>%
view()
flu_au_data <- all_data %>%
rename(date = 1, age_group = 3) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
group_by(date, epi_year, epi_week, age_group) %>%
summarise(cases = n(), .groups = "drop")
file_path = "csv/Australia/influenza.xlsx"
# Read all sheets
all_data <- excel_sheets(file_path) %>%
set_names() %>%  # Use sheet names for better tracking
map_df(~ read_excel(file_path, sheet = .x) %>%
mutate(sheet_name = .x))  # Add a column to track the sheet source
file_path = "csv/Australia/influenza.xlsx"
# Read all sheets
all_data <- excel_sheets(file_path) %>%
set_names() %>%  # Use sheet names for better tracking
map_df(~ read_excel(file_path, sheet = .x) %>%
mutate(sheet_name = .x))  # Add a column to track the sheet source
# Process the combined data
flu_au_data <- all_data %>%
rename(date = 1, age_group = 3) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
group_by(date, epi_year, epi_week, age_group) %>%
summarise(cases = n(), .groups = "drop")
rm(list = c("all_data", "file_path"))
View(flu_au_data)
flu_france_data <- read.csv("csv/France/influenza.csv") %>%
mutate(date = week,
year = substr(week, 1, 4),
week = substr(week, 5, 6)
)
View(flu_france_data)
