geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 200  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.12  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 500  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.12  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 200  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 1200  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 1500  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 15000  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 15000  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.0012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-pandemic", "Pandemic")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "Cumulative T1DM Cases Over Time",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
title = "",
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
# Load necessary libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Set seed for reproducibility
set.seed(42)
# Simulate data
n <- 15000  # total sample size
exposure <- c(rep(1, n / 2), rep(0, n / 2))  # Pandemic (1) vs Non-pandemic (0) cohort
baseline_hazard <- 0.0012  # Baseline hazard rate
hr <- 1.3  # Hazard ratio (30% increased risk for pandemic cohort)
# Generate survival times
survival_times <- rexp(n, rate = baseline_hazard * ifelse(exposure == 1, hr, 1))
censoring_time <- 15  # End of study at 15 years
event <- ifelse(survival_times <= censoring_time, 1, 0)  # 1 = T1DM developed, 0 = censored
survival_times <- pmin(survival_times, censoring_time)
# Combine into a data frame
data <- data.frame(time = survival_times, event = event, exposure = factor(exposure, labels = c("Non-exposed", "Exposed")))
# Create cumulative case counts over time
time_points <- seq(0, 15, by = 0.5)
cumulative_cases <- data %>%
group_by(exposure) %>%
summarise(cases_by_time = list(sapply(time_points, function(t) sum(time <= t & event == 1)))) %>%
unnest(c(cases_by_time)) %>%
mutate(time = rep(time_points, times = nlevels(exposure)))
# Plot the cumulative cases
ggplot(cumulative_cases, aes(x = time, y = cases_by_time, color = exposure, group = exposure)) +
geom_line(size = 1.2) +
labs(
x = "Years",
y = "Total Number of Cases",
color = "Cohort"
) +
theme_minimal() +
scale_color_manual(values = c("blue", "red"))
flu_df <- read.csv("csv/France/influenza.csv") %>%
mutate(date = week,
year = substr(week, 1, 4),
week = substr(week, 5, 6)
) %>%
view()
library(tidyverse)
library(lubridate)
library(tidyverse)
library(lubridate)
setwd("C:/Users/Evan/Documents/Code/sanofi-rsv-flu")
getwd()
source("R/Uk_data.R")
setwd("C:/Users/Evan/Documents/Code/sanofi-rsv-flu")
getwd()
source("R/France_data.R")
source("R/Uk_data.R")
source("R/France_data.R")
source("R/Uk_data.R")
source("R/France_data.R")
source("R/Uk_data.R")
source("R/France_data.R")
source("R/Uk_data.R")
View(rsv_uk_data)
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015")
library(readxl)
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015")
View(au_2008_2015_flu)
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
group_by(date) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
group_by(date) %>%
summarize(cases = n()) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
group_by(date, age_group) %>%
summarize(cases = n()) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
group_by(date, age_group) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
group_by(date) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date, age_group) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date, age_group) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date, age_group) %>%
summarise(cases = n())
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date, age_group) %>%
summarise(cases = n()) %>%
view()
library(lubridate)
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date, age_group) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date))
summarise(cases = n()) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date, age_group) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
summarise(year = epi_year, week = epi_week, cases = n()) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
group_by(date, age_group) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
summarise(date = date, year = epi_year, week = epi_week, cases = n()) %>%
view()
au_2008_2015_flu <- read_excel("csv/Australia/influenza.xlsx", sheet = "2008-2015") %>%
rename(date = 1) %>%
rename(age_group = 3) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
group_by(date, epi_year, epi_week, age_group) %>%
summarise(cases = n(), .groups = "drop") %>%
view()
library(purrr)
# Read all sheets
all_data <- excel_sheets("csv/Australia/influenza.xlsx") %>%
set_names() %>%  # Use sheet names for better tracking
map_df(~ read_excel(file_path, sheet = .x) %>%
mutate(sheet_name = .x))  # Add a column to track the sheet source
file_path = "csv/Australia/influenza.xlsx"
# Read all sheets
all_data <- excel_sheets(file_path) %>%
set_names() %>%  # Use sheet names for better tracking
map_df(~ read_excel(file_path, sheet = .x) %>%
mutate(sheet_name = .x))  # Add a column to track the sheet source
# Process the combined data
processed_data <- all_data %>%
rename(date = 1, age_group = 3) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
group_by(date, epi_year, epi_week, age_group) %>%
summarise(cases = n(), .groups = "drop")
# View the processed data
view(processed_data)
rm(list = c("all_data"))
file_path = "csv/Australia/influenza.xlsx"
# Read all sheets
all_data <- excel_sheets(file_path) %>%
set_names() %>%  # Use sheet names for better tracking
map_df(~ read_excel(file_path, sheet = .x) %>%
mutate(sheet_name = .x))  # Add a column to track the sheet source
# Process the combined data
au_flu_data <- all_data %>%
rename(date = 1, age_group = 3) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
group_by(date, epi_year, epi_week, age_group) %>%
summarise(cases = n(), .groups = "drop")
rm(list = c("all_data"))
# View the processed data
view(processed_data)
all_data <- excel_sheets(file_path) %>%
set_names() %>%  # Use sheet names for better tracking
map_df(~ read_excel(file_path, sheet = .x) %>%
mutate(sheet_name = .x))  # Add a column to track the sheet source
View(all_data)
au_flu_data <- all_data %>%
rename(date = 1, age_group = 3) %>%
mutate(date = dmy(date)) %>%
mutate(epi_year = isoyear(date),
epi_week = isoweek(date)) %>%
group_by(date, epi_year, epi_week, age_group) %>%
summarise(cases = n(), .groups = "drop")
View(au_flu_data)
rsv_au_data <- read_excel("csv/Australia/RSV.xlsx") %>%
view()
source("R/Australia_data.R")
rm(list=ls())
library(tidyverse)
library(lubridate)
library(readxl)
library(lubridate)
library(purrr)
setwd("C:/Users/Evan/Documents/Code/sanofi-rsv-flu")
getwd()
source("R/France_data.R")
source("R/Uk_data.R")
library(tidyverse)
library(lubridate)
library(readxl)
library(lubridate)
library(purrr)
setwd("C:/Users/Evan/Documents/Code/sanofi-rsv-flu")
getwd()
source("R/France_data.R")
source("R/Uk_data.R")
source("R/Australia_data.R")
View(flu_au_data)
View(flu_uk_data)
rm(list = c("all_data", "file_path"))
# Read the CSV file with the correct delimiter (semicolon)
df <- read_delim("csv/Denmark/flu_denmark.csv", delim = ";", col_names = FALSE)
View(df)
